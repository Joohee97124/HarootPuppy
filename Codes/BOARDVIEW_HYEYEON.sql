SELECT USER
FROM DUAL;
--==>> HTEST

SELECT *
FROM TBL_NOTICE;
/*
NOTICE_CODE	NOTICE_WRITER	NOTICE_HEAD_CODE	NOTICE_TITLE	NOTICE_PHOTO	NOTICE_CONTENT	NOTICE_VIEW	NOTICE_LIKE	NOTICE_DATE
1	ADM001	2	강아지배변봉투		산책 시 강아지 배변봉투를 꼭 챙겨주세요	0	0	21/06/26
*/

SELECT *
FROM TBL_NOTICE_LEG;

SELECT *
FROM TBL_BOARD_LEG;


SELECT *
FROM TBL_BOARD;
/*
BOARD_CODE	BOARD_WRITER	BOARD_CATE_CODE	BOARD_TITLE	BOARD_CONTENT	BOARD_PHOTO	BOARD_VIEW	BOARD_LIKE
1	SID002	3	오늘대박	오늘 산책메이트 산책갔는데 옆집 사람이었다 문열때부터 같이갔음 대박		0	0
*/

COMMIT;

SELECT CATE_CONTENT, NUM, TITLE, WRITER, CONTENT_DATE, VIEWNUM, LIKENUM
FROM BOARDVIEW
ORDER BY NUM
;

SELECT COUNT(*) AS COUNT
FROM BOARDVIEW
;

SELECT NUM, WRITER, HEAD_CODE, TITLE, CONTENT, PHOTO, VIEWNUM, LIKENUM, CONTENT_DATE, CATE_CONTENT
FROM BOARDVIEW
WHERE NUM = 10;


SELECT MAX(NUM)
FROM BOARDVIEW;


SELECT *
FROM TBL_ADMIN;

SELECT *
FROM TBL_BOARD;

SELECT *
FROM TBL_MEMBER;

SELECT *
FROM TBL_SID;


SELECT *
FROM BOARDVIEW;




-- 찐 BOARDVIEW 코드
CREATE OR REPLACE VIEW BOARDVIEW
AS
SELECT N.NOTICE_CODE AS NUM
     , N.NOTICE_WRITER AS WRITER
     , A.ADMIN_NAME AS NICKNAME
     , N.NOTICE_HEAD_CODE AS HEAD_CODE
     , N.NOTICE_TITLE AS TITLE
     , N.NOTICE_CONTENT AS CONTENT
     , N.NOTICE_PHOTO AS PHOTO
     , N.NOTICE_VIEW AS VIEWNUM
     , N.NOTICE_LIKE AS LIKENUM
     , TO_CHAR(N.NOTICE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CONTENT_DATE
     , (SELECT NOTICE_CATE_CONTENT
        FROM TBL_NOTICE_LEG
        WHERE NOTICE_CATE_CODE = N.NOTICE_HEAD_CODE) AS CATE_CONTENT
FROM TBL_ADMIN A
LEFT OUTER JOIN TBL_NOTICE N
ON N.NOTICE_WRITER = A.ADMIN_CODE
UNION ALL
SELECT B.BOARD_CODE AS NUM
     , B.BOARD_WRITER AS WRITER
     , MEM_NICKNAME AS NICKNAME
     , B.BOARD_CATE_CODE AS HEAD_CODE
     , B.BOARD_TITLE AS TITLE
     , B.BOARD_CONTENT AS CONTENT
     , B.BOARD_PHOTO AS PHOTO
     , B.BOARD_VIEW AS VIEWNUM
     , B.BOARD_LIKE AS LIKENUM
     , TO_CHAR(B.BOARD_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CONTENT_DATE
     , (SELECT BOARD_CATE_CONTENT
        FROM TBL_BOARD_LEG
        WHERE BOARD_CATE_CODE = B.BOARD_CATE_CODE) AS CATE_CONTENT
FROM TBL_BOARD B
LEFT OUTER JOIN TBL_SID S
ON B.BOARD_WRITER = S.SID_CODE
LEFT OUTER JOIN TBL_MEMBER M
ON S.MEM_CODE = M.MEM_CODE
WHERE B.BOARD_CODE NOT IN (SELECT BR.BOARD_CODE 
                           FROM TBL_REPORT_LOG L, TBL_BOARD_REPORT BR
                           WHERE L.REP_LOG_CODE = BR.REP_LOG_CODE
                           AND L.REP_STATE_CODE NOT IN 2
                           GROUP BY BR.BOARD_CODE)
ORDER BY WRITER                         
;


SELECT CATE_CONTENT, NUM, TITLE, NICKNAME, CONTENT_DATE, VIEWNUM, LIKENUM
FROM BOARDVIEW;

SELECT *
FROM BOARDVIEW;

SELECT *
FROM TBL_BOARD_REPORT;

SELECT *
FROM TBL_REPORT_LOG;

SELECT *
FROM TBL_WALKROOM_REPORT;

SELECT *
FROM TBL_BOARD;

